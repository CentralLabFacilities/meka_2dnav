<launch>
    <!-- run shm_omnibase_controller to control the omnibase -->
    <node pkg="shm_omnibase_controller" type="shm_omnibase_controller" name="shm_omnibase_controller" respawn="true">
    </node>

    <!-- static transform -->
    <!--node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.28 0.0 0.2 0.0 0.0 0.0 base_link laser 100" /-->
   
    <!-- hokuyo laser -->
    <!--node pkg="urg_node" respawn="true" type="urg_node" name="urg_node" output="screen" >
    </node-->

    <!-- Run gmapping -->
	<!--node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen"-->
		<!--param name="odom_frame" type="string" value="world"/-->
	<!--/node-->

	<!-- Run move_base -->	
	<!--node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen">
		<param name="navfn/allow_unknown" value="true"/>
		<param name="clearing_rotation_allowed" value="false"/>
	</node-->
  <!-- send pr2_l_arm.xml to param server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find meka_description)/robots/bie.urdf.xacro'" />

  <!--node pkg="rviz" type="rviz" respawn="false" output="screen" name="rviz" 
    args="-d '$(find m3_defs_ros)/m3_rviz.vcg'"/-->

  <!-- Robot state publisher -->
  <!--node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
  </node-->

  <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" type="string" value="" />
  </node>

<!-- Zero robot tf, kinect and head -->
<!--include file="$(find meka_description)/meka_additional_transforms.launch"/-->

<!--node pkg="meka_description" type="meka_ros_state.py" output="screen" name="joint_publisher"/-->

</launch>

